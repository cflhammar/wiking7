{"version":3,"sources":["components/Card/images/img0.png","components/Card/images/img1.png","components/Card/images/img2.png","components/Card/images/img3.png","components/Card/images/img4.png","components/Card/images/img5.png","components/Card/images/img6.png","components/Card/images/img7.png","components/Card/images/img8.png","components/Card/Card.js","components/Board/Board.js","components/HighScore/HighScore.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["images","img0","img1","img2","img3","img4","img5","img6","img7","img8","Card","props","classes","card","isFlipped","found","renderCard","bind","flipCard","handleStyle","this","value","onFlip","id","style","color","backgroundColor","className","alt","onClick","src","React","Component","Board","state","flipCounter","renderRow","i","cards","length","map","number","HighScore","toplist","name","backendURL","getHighScore","renderToplist","addHighScore","handleNameChange","url","fetch","then","response","json","jsonData","setState","alert","entry","index","score","e","target","placeholder","onChange","type","App","foundCorrect","flippedCards","numRounds","lowestScore","setBoard","shuffleBoard","checkMatch","resetFlipped","addRound","checkFinished","updateScore","componentDidMount","putHighScore","newEntry","JSON","stringify","method","body","headers","cardsArray","k","push","shuffledArray","array","j","Math","floor","random","console","log","openCards","filter","onLoad","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b712e75d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img0.d6629132.png\";","export default __webpack_public_path__ + \"static/media/img1.d23ef78f.png\";","export default __webpack_public_path__ + \"static/media/img2.2d6841f5.png\";","export default __webpack_public_path__ + \"static/media/img3.dfcd64d5.png\";","export default __webpack_public_path__ + \"static/media/img4.28c617b4.png\";","export default __webpack_public_path__ + \"static/media/img5.5ff61778.png\";","export default __webpack_public_path__ + \"static/media/img6.da65772b.png\";","export default __webpack_public_path__ + \"static/media/img7.c13c4dcb.png\";","export default __webpack_public_path__ + \"static/media/img8.acc921fd.png\";","import React from 'react'\r\n//import './Card.css'\r\nimport img0 from './images/img0.png'\r\nimport img1 from './images/img1.png'\r\nimport img2 from './images/img2.png'\r\nimport img3 from './images/img3.png'\r\nimport img4 from './images/img4.png'\r\nimport img5 from './images/img5.png'\r\nimport img6 from './images/img6.png'\r\nimport img7 from './images/img7.png'\r\nimport img8 from './images/img8.png'\r\nconst images = [img0, img1, img2, img3, img4, img5, img6, img7, img8]\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.classes = ['card-image', this.props.card.isFlipped, this.props.card.found]\r\n\r\n        this.renderCard = this.renderCard.bind(this);\r\n        this.flipCard = this.flipCard.bind(this);\r\n        this.handleStyle = this.handleStyle.bind(this);\r\n    }\r\n\r\n    renderCard() {\r\n        if (this.props.card.isFlipped) {\r\n            return images[this.props.card.value];\r\n        } else {\r\n            return images[0];//this.props.card.value;;\r\n        }\r\n    }\r\n\r\n    flipCard() {\r\n        this.props.onFlip(this.props.card.id);\r\n    }\r\n\r\n    handleStyle() {\r\n        let style = { color: 'grey' }\r\n        if (this.props.card.isFlipped) {\r\n            style.color = 'white';\r\n            style.backgroundColor = 'rgba(230,230,230,0.3)';\r\n        }\r\n        if (this.props.card.found) {\r\n            style.backgroundColor = 'rgba(40,240,40,0.3)';\r\n        }\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.card)\r\n        return (\r\n            <th key={this.props.card.id} className='Card'>\r\n\r\n                <img alt='Card' className={this.classes}  /*style={this.handleStyle()} */ onClick={this.flipCard} src={this.renderCard()} />\r\n            </th>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;\r\n\r\n//onClick={this.flipCard","import React from 'react';\r\nimport Card from '../Card/Card'\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            flipCounter: 0\r\n        }\r\n        this.renderRow = this.renderRow.bind(this);\r\n    }\r\n\r\n    renderRow(i) {\r\n        return (\r\n        <tr key={i}>\r\n            <Card key={this.props.cards[i].id} onFlip={this.props.onFlip}  card={this.props.cards[i]}/>\r\n            <Card key={this.props.cards[i+1].id} onFlip={this.props.onFlip}  card={this.props.cards[i+1]}/>\r\n            <Card key={this.props.cards[i+2].id} onFlip={this.props.onFlip}  card={this.props.cards[i+2]}/>\r\n            <Card key={this.props.cards[i+3].id} onFlip={this.props.onFlip}  card={this.props.cards[i+3]}/>\r\n        </tr>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        //let max = 16;\r\n        //this.setBoard(max);\r\n        if (this.props.cards.length > 5) {\r\n        return (\r\n            <table className='Gameboard'>\r\n                <tbody>\r\n\r\n                {[0,4,8,12].map(number=>this.renderRow(number))}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n    return <p></p>\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\n//import './HighScore.css';\r\n\r\nclass HighScore extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            toplist: [],\r\n            name: ''\r\n        }\r\n\r\n        this.backendURL = 'http://localhost:3001/api'\r\n\r\n        this.getHighScore = this.getHighScore.bind(this);\r\n        this.renderToplist = this.renderToplist.bind(this);\r\n        this.addHighScore = this.addHighScore.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n    getHighScore() {\r\n        const url = this.backendURL + '/highScore'\r\n        fetch(url, { \"headers\": { \"Content-Type\": \"application/json\" } },)\r\n            .then(response => {\r\n                return response.json()\r\n            }).then(jsonData => {\r\n                //   console.log(jsonData)\r\n                this.setState({\r\n                    toplist: jsonData\r\n                }\r\n                )\r\n            }\r\n            );\r\n    }\r\n\r\n    addHighScore() {\r\n        if (this.state.name) {\r\n            this.props.addHighScore(this.state.name);\r\n            this.getHighScore();\r\n            //  this.setState({ name: '' });\r\n        } else {\r\n            alert('Enter name before submitting!')\r\n        }\r\n\r\n    }\r\n\r\n    renderToplist() {\r\n        const highScore = this.state.toplist;\r\n        const toplist = highScore.map((entry, index) => {\r\n\r\n            return (<tr key={index}>\r\n                <td key={index + 1}>{index + 1}</td>\r\n                <td key={index + 2} className='table-name'>{entry.name}</td>\r\n                <td key={index + 3} >{entry.score}</td>\r\n            </tr>)\r\n        }\r\n        )\r\n\r\n        return (\r\n            <table className='toplistTable' >\r\n                <thead><tr><th>Pos</th><th>Name</th><th>Score</th></tr></thead>\r\n                <tbody>{toplist}</tbody>\r\n            </table>)\r\n    }\r\n\r\n    handleNameChange(e) {\r\n        this.setState({ name: e.target.value })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getHighScore();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='toplist'>\r\n                <div className='input'>\r\n                    <input\r\n                        placeholder=\"Enter your name\"\r\n                        onChange={this.handleNameChange}\r\n                    />\r\n                    <button type='submit' onClick={this.addHighScore}>Add Score</button>\r\n\r\n                </div>\r\n                <h3>Toplist:</h3>\r\n                {this.renderToplist()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HighScore;\r\n\r\n","import React from 'react';\n//import './App.css';\nimport Board from '../Board/Board.js'\nimport HighScore from '../HighScore/HighScore.js'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cards: [{\n        value: '',\n        id: '',\n        isFlipped: false,\n        found: false,\n      }],\n\n    }\n\n    this.foundCorrect = 0;\n    this.flippedCards = 0;\n    this.numRounds = 0;\n    this.lowestScore = '';\n\n    this.onFlip = this.onFlip.bind(this);\n    this.setBoard = this.setBoard.bind(this);\n    this.shuffleBoard = this.shuffleBoard.bind(this);\n    this.checkMatch = this.checkMatch.bind(this);\n    this.resetFlipped = this.resetFlipped.bind(this);\n    this.addRound = this.addRound.bind(this);\n    this.checkFinished = this.checkFinished.bind(this);\n    this.updateScore = this.updateScore.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.putHighScore = this.putHighScore.bind(this);\n\n  }\n\n  putHighScore(name) {\n    if (this.foundCorrect === 8) {\n      const backendURL = 'https://wiking7.herokuapp.com/' //'http://localhost:3001/'\n      const url = backendURL + 'api/highScore';\n      const newEntry = JSON.stringify({ name: name, score: this.numRounds });\n\n      fetch(url, {\n        method: 'POST',\n        body: newEntry,\n        headers: { 'Content-Type': 'application/json' }\n      })\n      this.setBoard();\n    } else {\n      alert('You must finish the game before submitting score!')\n    }\n    //.then(() => {\n\n    //this.getHighScore();\n    //this.setState({ name: '' });\n    //})\n\n  }\n\n  setBoard() {\n    let cardsArray = [];\n    let k = 0;\n    for (let i = 1; i < 9; i++) {\n      cardsArray.push({ value: i, id: k, isFlipped: false, found: false });\n      cardsArray.push({ value: i, id: k + 1, isFlipped: false, found: false });\n      k = k + 2;\n    }\n    let shuffledArray = this.shuffleBoard(cardsArray);\n    this.setState({ cards: shuffledArray });\n    this.foundCorrect = 0;\n    this.flippedCards = 0;\n    this.numRounds = 0;\n  }\n\n\n  shuffleBoard(cardsArray) {\n    let array = cardsArray;\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  onFlip(id) {\n    let cardsArray = this.state.cards;\n    if (this.flippedCards === 2) {\n      this.resetFlipped()\n    }\n\n    // flip card in card state\n    for (let i = 0; i < cardsArray.length; i++) {  // find what card was flipped...\n      if (cardsArray[i].id === id) {\n        if (cardsArray[i].isFlipped || cardsArray[i].found) {\n          break;\n        }\n        this.flippedCards += 1;\n        cardsArray[i].isFlipped = true;\n\n        //        // flip one card\n        this.setState({    // update state\n          cards: cardsArray,\n        }, () => {\n          console.log('card flipped');\n        });\n      }\n    }\n\n\n    if (this.flippedCards === 2) {\n      this.checkMatch()\n      this.addRound();\n      this.checkFinished();\n    }\n    // check match if there are two flipped cards\n    //   }\n    // }\n  }\n\n  addRound() {\n    this.numRounds += 1;\n  }\n\n  checkFinished() {\n    if (this.foundCorrect === 8) {\n      this.updateScore();\n    }\n  }\n\n  updateScore() {\n    if (!this.lowestScore) {\n      this.lowestScore = this.numRounds;\n    } else if (this.numRounds < this.lowestScore) {\n      this.lowestScore = this.numRounds;\n    }\n  }\n\n  checkMatch() {\n    let cardsArray1 = this.state.cards;\n    // find what 2 cards that are flipped open\n    let openCards = cardsArray1.filter(card => card.isFlipped && !card.found);\n\n    // check if two cards have same value\n    if (openCards[0].value === openCards[1].value) {\n      // if match update card state to found\n      let cardsArray = this.state.cards;\n      for (let i = 0; i < cardsArray.length; i++) {\n        if (cardsArray[i].value === openCards[0].value) {\n          // update state to found\n          cardsArray[i].found = true;\n        }\n      }\n      //update state\n      this.setState({\n        cards: cardsArray\n      });\n      this.foundCorrect += 1;\n      this.flippedCards = 0;\n    }\n\n  }\n\n  resetFlipped() {\n    let cardsArray = this.state.cards;\n    for (let i = 0; i < cardsArray.length; i++) {\n      // flip card if not already found\n      if (!cardsArray[i].found) {\n        cardsArray[i].isFlipped = false;\n      }\n    }\n    // update state and reset flipped cards counter\n\n    this.setState({\n      cards: cardsArray\n    });\n    this.flippedCards = 0;\n  }\n\n  componentDidMount() {\n    this.setBoard();\n  }\n\n\n  render() {\n\n    return (\n      <div className='Full' >\n        <div className='Full2'>\n\n          <div className='Data'>\n            <button className='start-button' onClick={() => {\n              this.setBoard()\n            }\n            }>Restart Game</button>\n            <div className='data-inside'>\n              <p>Correct:</p>\n              <p> {this.foundCorrect} / 8</p>\n            </div>\n            <div className='data-inside'>\n              <p>Round:</p>\n              <p> {this.numRounds}</p>\n            </div>\n            <div className='data-inside'>\n              <p>Best score: </p>\n              <p>{this.lowestScore}</p>\n            </div>\n          </div>\n\n          <div className='Gameboard'>\n            <Board onLoad={this.setBoard} onFlip={this.onFlip} cards={this.state.cards} />\n          </div>\n        </div>\n        <HighScore addHighScore={this.putHighScore} />\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}